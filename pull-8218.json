{"source": "https://github.com/QuantConnect/Lean", "title": "ARIMA indicator error handling", "link": "https://github.com/QuantConnect/Lean/pull/8218", "state": "closed", "created_by": "Marinovsky", "created_at": "2024-07-22T15:30:10Z", "updated_at": "2024-07-22T17:24:13Z", "closed_at": "2024-07-22T17:24:13Z", "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n#### Description\r\n<!--- Describe your changes in detail -->\r\nAdd a property for ARIMA indicator that defaults to true to handle exceptions thrown by the `Fit.MultiDim()` method. When this method throws an exception, the message is logged and a zero array is set as a result.\r\n#### Related Issue\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\nCloses #8039 \r\n#### Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\nLEAN should not throw unhandled exceptions\r\n#### Requires Documentation Change\r\n<!--- Please indicate if these changes will require updates to documentation, and if so, specify what changes are required -->\r\nThis change might require an update in the documentation briefing the users on this new argument\r\n#### How Has This Been Tested?\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\nThere was a method that tested the indicator against small values close to zero. Since before the exceptions thrown by the indicator were unhandled, this method was overridden to be empty. Specifically, the value that made the indicator fail was zero. The indicator value on the explosion was zero and with this change the indicator value after handling the exception is also zero. This happens since the values assigned to the variables `maFits` and `arFits` when the method `Fit.MultiDim()` fails is an array of zeros of the needed size, and those values are the ones used to calculate the value of the indicator in `ComputeNextValue()`.\r\n#### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] Refactor (non-breaking change which improves implementation)\r\n- [ ] Performance (non-breaking change which improves performance. Please add associated performance test and results)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Non-functional change (xml comments/documentation/etc)\r\n\r\n#### Checklist:\r\n<!--- The following is a checklist of items that MUST be completed before a PR is accepted -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project.\r\n- [x] I have read the **CONTRIBUTING** [document](https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md).\r\n- [x] I have added tests to cover my changes. <!--- If not applicable, please explain why -->\r\n- [x] All new and existing tests passed.\r\n- [x] My branch follows the naming convention `bug-<issue#>-<description>` or `feature-<issue#>-<description>`\r\n\r\n<!--- Template inspired by https://www.talater.com/open-source-templates/#/page/99 -->\r\n", "comments": []}