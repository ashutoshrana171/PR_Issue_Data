{"source": "https://github.com/QuantConnect/Lean", "title": "Fix: Lock thread of Place First Part Of CrossZeroOrder", "link": "https://github.com/QuantConnect/Lean/pull/8157", "state": "closed", "created_by": "Romazes", "created_at": "2024-07-05T19:46:54Z", "updated_at": "2024-07-05T19:52:31Z", "closed_at": "2024-07-05T19:52:31Z", "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n#### Description\r\n<!--- Describe your changes in detail -->\r\nThe small fix of locking thread when we have placed first part of cross zero order.\r\n\r\n#### Related Pull Requests\r\n- https://github.com/QuantConnect/Lean/pull/8110\r\n- https://github.com/QuantConnect/Lean/pull/8051\r\n- https://github.com/QuantConnect/Lean/pull/8114\r\n\r\n#### Related Issue\r\n<!--- This project only accepts pull requests related to open issues -->\r\n<!--- If suggesting a new feature or change, please discuss it in an issue first -->\r\n<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->\r\n<!--- Please link to the issue here: -->\r\nN/A\r\n\r\n#### Motivation and Context\r\n<!--- Why is this change required? What problem does it solve? -->\r\nMake process of CrossZeroOrder more defended from thread racing.\r\n\r\n#### Requires Documentation Change\r\n<!--- Please indicate if these changes will require updates to documentation, and if so, specify what changes are required -->\r\nN/A\r\n\r\n#### How Has This Been Tested?\r\n<!--- Please describe in detail how you tested your changes. -->\r\n<!--- Include details of your testing environment, and the tests you ran to -->\r\n<!--- see how your change affects other areas of the code, etc. -->\r\nAll existing tests related to the CrossZeroOrder process have been executed to ensure that these changes do not introduce any new issues and that they resolve the problems they are intended to fix.\r\n\r\n#### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] Refactor (non-breaking change which improves implementation)\r\n- [ ] Performance (non-breaking change which improves performance. Please add associated performance test and results)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Non-functional change (xml comments/documentation/etc)\r\n\r\n#### Checklist:\r\n<!--- The following is a checklist of items that MUST be completed before a PR is accepted -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project.\r\n- [x] I have read the **CONTRIBUTING** [document](https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md).\r\n- [x] I have added tests to cover my changes. <!--- If not applicable, please explain why -->\r\n- [x] All new and existing tests passed.\r\n- [x] My branch follows the naming convention `bug-<issue#>-<description>` or `feature-<issue#>-<description>`\r\n\r\n<!--- Template inspired by https://www.talater.com/open-source-templates/#/page/99 -->\r\n", "comments": []}