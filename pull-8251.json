{"source": "https://github.com/QuantConnect/Lean", "title": "Fix sign of order quantity in example algorithm OnMarginCall().", "link": "https://github.com/QuantConnect/Lean/pull/8251", "state": "closed", "created_by": "nmisch", "created_at": "2024-08-10T23:57:41Z", "updated_at": "2024-08-12T20:40:51Z", "closed_at": "2024-08-12T20:40:51Z", "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n#### Description\r\nStop reversing the sign of the quantity.\r\n\r\n#### Related Issue\r\nCloses #8250\r\n\r\n#### Motivation and Context\r\n\r\nSee #8250.\r\nhttps://github.com/QuantConnect/Lean/blob/master/Algorithm.CSharp/MarginCallEventsAlgorithm.cs\r\nOnMarginCall() turns a proposed sale of 100 shares into a *buy* of 110 shares,\r\ncontrary to comments.\r\n\r\n#### Requires Documentation Change\r\nNo.\r\n\r\n#### How Has This Been Tested?\r\n\r\n- Before: https://www.quantconnect.com/terminal/processCache?request=embedded_backtest_580fe43d1d083d907ff8611bd2aaa667.html\r\n- After: https://www.quantconnect.com/terminal/processCache?request=embedded_backtest_6b848bb31ac3dfcd9722dc9a4a695c93.html\r\n\r\n#### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] Refactor (non-breaking change which improves implementation)\r\n- [ ] Performance (non-breaking change which improves performance. Please add associated performance test and results)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Non-functional change (xml comments/documentation/etc)\r\n\r\n#### Checklist:\r\n<!--- The following is a checklist of items that MUST be completed before a PR is accepted -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [X] My code follows the code style of this project.\r\n- [X] I have read the **CONTRIBUTING** [document](https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md).\r\n- [ ] I have added tests to cover my changes.  This algorithm has no tests, hence this regression escaping.  Addressing that backlog would be a larger project.\r\n- [X] All new and existing tests passed.  Not actually.  The test run ended the same way the last master commit test run ended, at `ERROR:: MarketOnClose orders must be placed within 00:15:30 before market close. Override this TimeSpan buffer by setting Orders.MarketOnCloseOrder.SubmissionTimeBuffer in QCAlgorithm.Initialize().`\r\n- [X] My branch follows the naming convention `bug-<issue#>-<description>` or `feature-<issue#>-<description>`\r\n\r\n<!--- Template inspired by https://www.talater.com/open-source-templates/#/page/99 -->", "comments": []}