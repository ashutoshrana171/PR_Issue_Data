{"source": "https://github.com/QuantConnect/Lean", "title": "MarginCallEventsAlgorithm buys where comments convey intent to sell", "link": "https://github.com/QuantConnect/Lean/issues/8250", "state": "closed", "created_by": "nmisch", "created_at": "2024-08-10T23:20:44Z", "updated_at": "2024-08-12T20:40:52Z", "closed_at": "2024-08-12T20:40:52Z", "body": "<!--- This template provides sections for bugs and features. Please delete any irrelevant sections before submitting -->\r\n\r\n#### Expected Behavior\r\nhttps://github.com/QuantConnect/Lean/blob/master/Algorithm.CSharp/MarginCallEventsAlgorithm.cs\r\nand\r\nhttps://github.com/QuantConnect/Lean/blob/master/Algorithm.Python/MarginCallEventsAlgorithm.py\r\nshould sell assets at margin call.\r\n\r\n#### Actual Behavior\r\nThey attempt to buy assets, yielding `Order Error: ids: [122], Insufficient\r\nbuying power to complete orders`:\r\nhttps://www.quantconnect.com/terminal/processCache?request=embedded_backtest_580fe43d1d083d907ff8611bd2aaa667.html\r\n\r\n#### Potential Solution\r\n\r\n```csharp\r\n            // this code gets called BEFORE the orders are placed, so we can try to liquidate some of our positions\r\n            // before we get the margin call orders executed. We could also modify these orders by changing their\r\n            // quantities\r\n            foreach (var order in requests.ToList())\r\n            {\r\n                // liquidate an extra 10% each time we get a margin call to give us more padding\r\n                var newQuantity = (int)(Math.Sign(order.Quantity) * order.Quantity * 1.1m);\r\n```\r\n\r\nThe OnMarginCall() caller already provides a negative quantity to achieve a\r\nsale.  Hence, despite the comments about avoiding margin calls and about\r\npadding, this turns a proposed sale of 100 shares into a *buy* of 110 shares.\r\nStop reversing the sign of the quantity:\r\nhttps://www.quantconnect.com/terminal/processCache?request=embedded_backtest_6b848bb31ac3dfcd9722dc9a4a695c93.html\r\n\r\n#### Reproducing the Problem\r\n\r\nCopy\r\nhttps://github.com/QuantConnect/Lean/blob/master/Algorithm.CSharp/MarginCallEventsAlgorithm.cs\r\nor\r\nhttps://github.com/QuantConnect/Lean/blob/master/Algorithm.Python/MarginCallEventsAlgorithm.py\r\ninto a workspace, then run a backtest.\r\n\r\n#### System Information\r\n\r\nQuantConnect cloud environment\r\n\r\n#### Checklist\r\n<!--- Confirm that you've provided all the required information. -->\r\n<!--- Required fields --->\r\n- [X] I have completely filled out this template\r\n- [X] I have confirmed that this issue exists on the current `master` branch\r\n- [X] I have confirmed that this is not a duplicate issue by searching [issues](https://github.com/QuantConnect/Lean/issues)\r\n<!--- Required for Bugs, feature request can delete the line below. -->\r\n- [X] I have provided detailed steps to reproduce the issue\r\n\r\n<!--- Template inspired by https://github.com/stevemao/github-issue-templates -->", "comments": []}