{"source": "https://github.com/QuantConnect/Lean", "title": "Implements new indicator ForceIndex", "link": "https://github.com/QuantConnect/Lean/pull/8155", "state": "closed", "created_by": "femtotrader", "created_at": "2024-07-05T17:45:59Z", "updated_at": "2024-07-20T08:25:32Z", "closed_at": "2024-07-16T14:14:14Z", "body": "<!--- Provide a general summary of your changes in the Title above -->\r\n\r\n#### Description\r\n<!--- Describe your changes in detail -->\r\n\r\nImplement new indicator - ForceIndex\r\n\r\n#### Related Issue\r\n\r\nCloses #8123\r\n\r\n#### Motivation and Context\r\nThe ForceIndex indicator wasn't implemented\r\n\r\n#### Requires Documentation Change\r\n<!--- Please indicate if these changes will require updates to documentation, and if so, specify what changes are required -->\r\nDoc for this indicator should be created but some docstring are written\r\n\r\n#### How Has This Been Tested?\r\n\r\ncomparison with talipp computation of ForceIndex(20) of SPY candle data using [generate_reference_data_from_talipp.py](https://github.com/QuantConnect/Lean/blob/master/Tests/TestData/generate_reference_data_from_talipp.py)\r\n\r\n#### Types of changes\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] Refactor (non-breaking change which improves implementation)\r\n- [ ] Performance (non-breaking change which improves performance. Please add associated performance test and results)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [ ] Non-functional change (xml comments/documentation/etc)\r\n\r\n#### Checklist:\r\n<!--- The following is a checklist of items that MUST be completed before a PR is accepted -->\r\n<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->\r\n- [x] My code follows the code style of this project.\r\n- [x] I have read the **CONTRIBUTING** [document](https://github.com/QuantConnect/Lean/blob/master/CONTRIBUTING.md).\r\n- [x] I have added tests to cover my changes. <!--- If not applicable, please explain why -->\r\n- [x] All new and existing tests passed.\r\n- [x] My branch follows the naming convention `bug-<issue#>-<description>` or `feature-<issue#>-<description>`\r\n\r\n<!--- Template inspired by https://www.talater.com/open-source-templates/#/page/99 -->\r\n", "comments": [{"user": "femtotrader", "is_staff": false, "created_at": "2024-07-05T20:55:02Z", "body": "I have no idea why `AcceptsRenkoBarsAsInput` test is failing.\r\nAll others tests are passing"}, {"user": "jaredbroad", "is_staff": true, "created_at": "2024-07-09T14:00:30Z", "body": "Thanks, @femtotrader! For all the new PRs, can you please attach the source code of the comparison with Tulip, which generates the test data? We want to make sure all indicators have a third-party benchmark. "}, {"user": "femtotrader", "is_staff": false, "created_at": "2024-07-09T14:17:02Z", "body": "Indicators are tested against talipp (Python) not tulipindicators (which is a great technical indicator lib also... but in C)\r\n\r\nSource code of the comparison with talipp have ever been merged in this PR\r\nhttps://github.com/QuantConnect/Lean/pull/8148/\r\nsee generate_reference_data_from_talipp.py\r\n\r\nI don't have an other (second) comparison script for tulipindicators ."}, {"user": "femtotrader", "is_staff": false, "created_at": "2024-07-09T14:21:58Z", "body": "Tulip indicators have a Python binding https://github.com/TulipCharts/tulipy which is marked as [NOT ACTIVELY MAINTAINED]  ... so I don't know what to think about it.\r\n\r\nThis fork https://github.com/jesse-ai/tulipy (which have been used by Jesse bot) doesn't seems to be in a better state.\r\n\r\nIf comparison should be done against tulip indicators also we probably should rely on a C/C++ program for that purpose (which is an other story)"}]}